pipeline {
    agent { label 'pi' }
    parameters {[
        choice(choices: ['ONE', 'TWO'], name: 'PARAMETER_01'),
        booleanParam(name: "installOCL", defaultValue: false),
        string(defaultValue: 'scriptcrunch', name: 'STRING-PARAMETER', trim: true)
    ]}
    stages {
        // stage('Check out artifact') {
        //     steps {
        //         echo 'Checkout'
        //         sh '''
        //         cd CC2
        //         rm -rf *.bin* feature/reports
        //         if [ -f version ]; then rm version
        //         fi
        //         wget http://sevikci01.creatorctek.local:8080/job/oe-build/job/master/lastSuccessfulBuild/artifact/deploy-ccu/upgrade-ccu-dev.bin -O upgrade.bin
        //         wget http://sevikci01.creatorctek.local:8080/job/oe-build/job/master/lastSuccessfulBuild/artifact/deploy-ccu/version
        //         '''
        //     }
        // }
        // stage('Trigger Update') {
        //     steps {
        //             timeout(time: 800, unit: 'SECONDS') {
        //                 sh './CC2/startupCentralSystem.sh'
        //             }
        //     }
        // }
        // stage('Test firmware update') {
        //     steps {
        //         timeout(time: 600, unit: 'SECONDS') {
        //             sh './CC2/test_firmware.sh'
        //         }
        //     }
        // }
        stage('Install firmware for OCL') {
            when { expression { params.installOCL } }
            steps {
                echo "INSTALLING OCL"
            }
        }
        stage('Run test') {
            steps {
                echo 'RUN'
                timeout(time: 500, unit: 'SECONDS') {
                    sh '''#!/usr/bin/env bash
                        ./CC2/checkCS.sh
                        cd CC2/feature
                        behave --junit
                    '''
                }
            }
        }
    }
    post {
        always {
            junit 'CC2/feature/reports/*.xml'
        }
    }
}
