pipeline {
    agent { label 'pi' }
    
    stages {
        stage('Check out artifact') {
            steps {
                echo 'Checkout'
                sh '''
                cd CC2
                rm -rf *.bin*
                if [ -f version ]; then
                    rm version
                fi
                wget http://192.168.2.73:8080/job/oe-build/job/master/lastSuccessfulBuild/artifact/deploy-ccu/upgrade-ccu-dev.bin
                wget http://192.168.2.73:8080/job/oe-build/job/master/lastSuccessfulBuild/artifact/deploy-ccu/version
                '''
            }
        }
        stage('Trigger Update') {
            steps {
                    timeout(time: 800, unit: 'SECONDS') {
                        sh '''
                            curl 'http://192.168.17.123/current_state.json?pw=admin&Relay4=0'
                            sleep 3s
                            curl 'http://192.168.17.123/current_state.json?pw=admin&Relay4=1'
                            sleep 10s
                            pip3 install websocket
                            python3 CC2/CentralSystem.py &
                        '''
                        checkCS()
                        sh '''
                            echo "aa"
                            #echo Update|nc -w 10 localhost 8001
                        '''
                    }
            }
        }
        stage('Test firmware update') {
            steps {
                echo 'update'
                timeout(time: 600, unit: 'SECONDS') {
                    sh '''#!/usr/bin/env bash
                        while true
                        do
                            re=$(echo tm fsn|nc -q 0 localhost 8001)
                            echo $re
                            isJson=$(echo $re | jq -r type)
                            echo $isJson
                            if [[ $isJson == *"error"* ]]
                            then
                                echo Error
                                exit 1
                            else
                                re=$(echo $re|jq -r '.message.updatestatus')
                                echo $re
                                exit 0 #chichi
                            fi

                            if [[ $re == "Installed" ]]
                            then
                                echo reboot|nc -w 10 localhost 8001
                                echo Installed
                                exit 0
                            elif [[ $re == "DownloadFailed" ]] || [[ $re == "InstallationFailed" ]]
                            then
                                echo Failed
                                exit 1
                            fi
                            sleep 20
                        done
                    '''
                }
            }
        }

        stage('Run test') {
            steps {
                echo 'RUN'
                timeout(time: 500, unit: 'SECONDS') {
                    checkCS()
                    sh '''#!/usr/bin/env bash
                        cd CC2/feature
                        behave --junit
                    '''
                }
            }
        }
    }
    post {
        always {
            junit 'CC2/feature/reports/*.xml'
        }
    }
}

def checkCS() {
    echo "checking CS"
    sh '''
        while true
        do
            re=$(echo quit|nc -q 0 localhost 8001)
            err=$(echo $re | cut -c 1-7)
            echo $err
            if [[ $err == "ErrorCS" ]] || [[ $err == "" ]]
            then
                echo "no connection"
                sleep 20s
                continue
            else
                echo "have connection"
                break
            fi

        done
    '''
}
